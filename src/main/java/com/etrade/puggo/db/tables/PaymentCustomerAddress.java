/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.tables.records.PaymentCustomerAddressRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 账单地址/买家收货地址
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentCustomerAddress extends TableImpl<PaymentCustomerAddressRecord> {

    private static final long serialVersionUID = 789406167;

    /**
     * The reference instance of <code>etrade_goods.payment_customer_address</code>
     */
    public static final PaymentCustomerAddress PAYMENT_CUSTOMER_ADDRESS = new PaymentCustomerAddress();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentCustomerAddressRecord> getRecordType() {
        return PaymentCustomerAddressRecord.class;
    }

    /**
     * The column <code>etrade_goods.payment_customer_address.id</code>. 主键id
     */
    public final TableField<PaymentCustomerAddressRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "主键id");

    /**
     * The column <code>etrade_goods.payment_customer_address.user_id</code>. 系统用户id
     */
    public final TableField<PaymentCustomerAddressRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "系统用户id");

    /**
     * The column <code>etrade_goods.payment_customer_address.title</code>. 标题，用来区分不同的地址
     */
    public final TableField<PaymentCustomerAddressRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "标题，用来区分不同的地址");

    /**
     * The column <code>etrade_goods.payment_customer_address.first_name</code>. 名字
     */
    public final TableField<PaymentCustomerAddressRecord, String> FIRST_NAME = createField(DSL.name("first_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "名字");

    /**
     * The column <code>etrade_goods.payment_customer_address.last_name</code>. 姓氏
     */
    public final TableField<PaymentCustomerAddressRecord, String> LAST_NAME = createField(DSL.name("last_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "姓氏");

    /**
     * The column <code>etrade_goods.payment_customer_address.phone_number</code>. 电话号码
     */
    public final TableField<PaymentCustomerAddressRecord, String> PHONE_NUMBER = createField(DSL.name("phone_number"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "电话号码");

    /**
     * The column <code>etrade_goods.payment_customer_address.address_line1</code>. 详细地址1
     */
    public final TableField<PaymentCustomerAddressRecord, String> ADDRESS_LINE1 = createField(DSL.name("address_line1"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "详细地址1");

    /**
     * The column <code>etrade_goods.payment_customer_address.address_line2</code>. 详细地址2
     */
    public final TableField<PaymentCustomerAddressRecord, String> ADDRESS_LINE2 = createField(DSL.name("address_line2"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "详细地址2");

    /**
     * The column <code>etrade_goods.payment_customer_address.post_code</code>. 邮编
     */
    public final TableField<PaymentCustomerAddressRecord, String> POST_CODE = createField(DSL.name("post_code"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "邮编");

    /**
     * The column <code>etrade_goods.payment_customer_address.city</code>. 城市
     */
    public final TableField<PaymentCustomerAddressRecord, String> CITY = createField(DSL.name("city"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "城市");

    /**
     * The column <code>etrade_goods.payment_customer_address.state</code>. 州/省
     */
    public final TableField<PaymentCustomerAddressRecord, String> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "州/省");

    /**
     * The column <code>etrade_goods.payment_customer_address.country</code>. 国家
     */
    public final TableField<PaymentCustomerAddressRecord, String> COUNTRY = createField(DSL.name("country"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "国家");

    /**
     * The column <code>etrade_goods.payment_customer_address.is_default</code>. 是否是默认地址
     */
    public final TableField<PaymentCustomerAddressRecord, Byte> IS_DEFAULT = createField(DSL.name("is_default"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是默认地址");

    /**
     * The column <code>etrade_goods.payment_customer_address.type</code>. billing/delivery：账单地址/买家收货地址
     */
    public final TableField<PaymentCustomerAddressRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "billing/delivery：账单地址/买家收货地址");

    /**
     * The column <code>etrade_goods.payment_customer_address.created</code>.
     */
    public final TableField<PaymentCustomerAddressRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.payment_customer_address.modified</code>.
     */
    public final TableField<PaymentCustomerAddressRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.payment_customer_address</code> table reference
     */
    public PaymentCustomerAddress() {
        this(DSL.name("payment_customer_address"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.payment_customer_address</code> table reference
     */
    public PaymentCustomerAddress(String alias) {
        this(DSL.name(alias), PAYMENT_CUSTOMER_ADDRESS);
    }

    /**
     * Create an aliased <code>etrade_goods.payment_customer_address</code> table reference
     */
    public PaymentCustomerAddress(Name alias) {
        this(alias, PAYMENT_CUSTOMER_ADDRESS);
    }

    private PaymentCustomerAddress(Name alias, Table<PaymentCustomerAddressRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentCustomerAddress(Name alias, Table<PaymentCustomerAddressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("账单地址/买家收货地址"));
    }

    public <O extends Record> PaymentCustomerAddress(Table<O> child, ForeignKey<O, PaymentCustomerAddressRecord> key) {
        super(child, key, PAYMENT_CUSTOMER_ADDRESS);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAYMENT_CUSTOMER_ADDRESS_IDX_USER_ID);
    }

    @Override
    public PaymentCustomerAddress as(String alias) {
        return new PaymentCustomerAddress(DSL.name(alias), this);
    }

    @Override
    public PaymentCustomerAddress as(Name alias) {
        return new PaymentCustomerAddress(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentCustomerAddress rename(String name) {
        return new PaymentCustomerAddress(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentCustomerAddress rename(Name name) {
        return new PaymentCustomerAddress(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, Long, String, String, String, String, String, String, String, String, String, String, Byte, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
