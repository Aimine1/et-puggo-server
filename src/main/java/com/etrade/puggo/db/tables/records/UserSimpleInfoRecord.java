/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables.records;


import com.etrade.puggo.db.tables.UserSimpleInfo;
import javax.annotation.processing.Generated;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 个人简短信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSimpleInfoRecord extends UpdatableRecordImpl<UserSimpleInfoRecord> implements Record4<Long, Long, String, String> {

    private static final long serialVersionUID = 279135097;

    /**
     * Setter for <code>etrade_goods.user_simple_info.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>etrade_goods.user_simple_info.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>etrade_goods.user_simple_info.user_id</code>. 用户id
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>etrade_goods.user_simple_info.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>etrade_goods.user_simple_info.nickname</code>. 用户昵称
     */
    public void setNickname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>etrade_goods.user_simple_info.nickname</code>. 用户昵称
     */
    public String getNickname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>etrade_goods.user_simple_info.avatar</code>. 用户头像
     */
    public void setAvatar(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>etrade_goods.user_simple_info.avatar</code>. 用户头像
     */
    public String getAvatar() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserSimpleInfo.USER_SIMPLE_INFO.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserSimpleInfo.USER_SIMPLE_INFO.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return UserSimpleInfo.USER_SIMPLE_INFO.NICKNAME;
    }

    @Override
    public Field<String> field4() {
        return UserSimpleInfo.USER_SIMPLE_INFO.AVATAR;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getNickname();
    }

    @Override
    public String component4() {
        return getAvatar();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getNickname();
    }

    @Override
    public String value4() {
        return getAvatar();
    }

    @Override
    public UserSimpleInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserSimpleInfoRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserSimpleInfoRecord value3(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public UserSimpleInfoRecord value4(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public UserSimpleInfoRecord values(Long value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSimpleInfoRecord
     */
    public UserSimpleInfoRecord() {
        super(UserSimpleInfo.USER_SIMPLE_INFO);
    }

    /**
     * Create a detached, initialised UserSimpleInfoRecord
     */
    public UserSimpleInfoRecord(Long id, Long userId, String nickname, String avatar) {
        super(UserSimpleInfo.USER_SIMPLE_INFO);

        set(0, id);
        set(1, userId);
        set(2, nickname);
        set(3, avatar);
    }
}
