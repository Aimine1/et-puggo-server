/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.GoodsQualityRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商品成色
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoodsQuality extends TableImpl<GoodsQualityRecord> {

    private static final long serialVersionUID = 266942610;

    /**
     * The reference instance of <code>etrade_goods.goods_quality</code>
     */
    public static final GoodsQuality GOODS_QUALITY = new GoodsQuality();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoodsQualityRecord> getRecordType() {
        return GoodsQualityRecord.class;
    }

    /**
     * The column <code>etrade_goods.goods_quality.id</code>.
     */
    public final TableField<GoodsQualityRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.goods_quality.class_id</code>. 商品分类级别id
     */
    public final TableField<GoodsQualityRecord, Integer> CLASS_ID = createField(DSL.name("class_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品分类级别id");

    /**
     * The column <code>etrade_goods.goods_quality.quality</code>. 商品成色
     */
    public final TableField<GoodsQualityRecord, String> QUALITY = createField(DSL.name("quality"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品成色");

    /**
     * The column <code>etrade_goods.goods_quality.lang</code>. 语言
     */
    public final TableField<GoodsQualityRecord, String> LANG = createField(DSL.name("lang"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "语言");

    /**
     * The column <code>etrade_goods.goods_quality.created</code>.
     */
    public final TableField<GoodsQualityRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.goods_quality.modified</code>.
     */
    public final TableField<GoodsQualityRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.goods_quality</code> table reference
     */
    public GoodsQuality() {
        this(DSL.name("goods_quality"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_quality</code> table reference
     */
    public GoodsQuality(String alias) {
        this(DSL.name(alias), GOODS_QUALITY);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_quality</code> table reference
     */
    public GoodsQuality(Name alias) {
        this(alias, GOODS_QUALITY);
    }

    private GoodsQuality(Name alias, Table<GoodsQualityRecord> aliased) {
        this(alias, aliased, null);
    }

    private GoodsQuality(Name alias, Table<GoodsQualityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("商品成色"));
    }

    public <O extends Record> GoodsQuality(Table<O> child, ForeignKey<O, GoodsQualityRecord> key) {
        super(child, key, GOODS_QUALITY);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOODS_QUALITY_PRIMARY);
    }

    @Override
    public Identity<GoodsQualityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GOODS_QUALITY;
    }

    @Override
    public UniqueKey<GoodsQualityRecord> getPrimaryKey() {
        return Keys.KEY_GOODS_QUALITY_PRIMARY;
    }

    @Override
    public List<UniqueKey<GoodsQualityRecord>> getKeys() {
        return Arrays.<UniqueKey<GoodsQualityRecord>>asList(Keys.KEY_GOODS_QUALITY_PRIMARY);
    }

    @Override
    public GoodsQuality as(String alias) {
        return new GoodsQuality(DSL.name(alias), this);
    }

    @Override
    public GoodsQuality as(Name alias) {
        return new GoodsQuality(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsQuality rename(String name) {
        return new GoodsQuality(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsQuality rename(Name name) {
        return new GoodsQuality(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
