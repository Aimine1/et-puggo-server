/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.GoodsMessageLogsRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商品会话日志
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoodsMessageLogs extends TableImpl<GoodsMessageLogsRecord> {

    private static final long serialVersionUID = 1605808560;

    /**
     * The reference instance of <code>etrade_goods.goods_message_logs</code>
     */
    public static final GoodsMessageLogs GOODS_MESSAGE_LOGS = new GoodsMessageLogs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoodsMessageLogsRecord> getRecordType() {
        return GoodsMessageLogsRecord.class;
    }

    /**
     * The column <code>etrade_goods.goods_message_logs.id</code>.
     */
    public final TableField<GoodsMessageLogsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.goods_message_logs.buyer_id</code>. 买家用户id
     */
    public final TableField<GoodsMessageLogsRecord, Long> BUYER_ID = createField(DSL.name("buyer_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "买家用户id");

    /**
     * The column <code>etrade_goods.goods_message_logs.seller_id</code>. 卖家用户id
     */
    public final TableField<GoodsMessageLogsRecord, Long> SELLER_ID = createField(DSL.name("seller_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "卖家用户id");

    /**
     * The column <code>etrade_goods.goods_message_logs.goods_id</code>. 商品id
     */
    public final TableField<GoodsMessageLogsRecord, Long> GOODS_ID = createField(DSL.name("goods_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "商品id");

    /**
     * The column <code>etrade_goods.goods_message_logs.buyer_price</code>. 买家出价
     */
    public final TableField<GoodsMessageLogsRecord, BigDecimal> BUYER_PRICE = createField(DSL.name("buyer_price"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "买家出价");

    /**
     * The column <code>etrade_goods.goods_message_logs.state</code>. 商品沟通状态
     */
    public final TableField<GoodsMessageLogsRecord, String> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品沟通状态");

    /**
     * The column <code>etrade_goods.goods_message_logs.is_goods_conmment</code>. 买家对商品发表评论
     */
    public final TableField<GoodsMessageLogsRecord, Byte> IS_GOODS_CONMMENT = createField(DSL.name("is_goods_conmment"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "买家对商品发表评论");

    /**
     * The column <code>etrade_goods.goods_message_logs.is_buyer_conmment</code>. 对买家发表评论
     */
    public final TableField<GoodsMessageLogsRecord, Byte> IS_BUYER_CONMMENT = createField(DSL.name("is_buyer_conmment"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "对买家发表评论");

    /**
     * The column <code>etrade_goods.goods_message_logs.is_seller_conmment</code>. 对卖家发表评论
     */
    public final TableField<GoodsMessageLogsRecord, Byte> IS_SELLER_CONMMENT = createField(DSL.name("is_seller_conmment"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "对卖家发表评论");

    /**
     * The column <code>etrade_goods.goods_message_logs.created</code>.
     */
    public final TableField<GoodsMessageLogsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.goods_message_logs.modified</code>.
     */
    public final TableField<GoodsMessageLogsRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.goods_message_logs</code> table reference
     */
    public GoodsMessageLogs() {
        this(DSL.name("goods_message_logs"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_message_logs</code> table reference
     */
    public GoodsMessageLogs(String alias) {
        this(DSL.name(alias), GOODS_MESSAGE_LOGS);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_message_logs</code> table reference
     */
    public GoodsMessageLogs(Name alias) {
        this(alias, GOODS_MESSAGE_LOGS);
    }

    private GoodsMessageLogs(Name alias, Table<GoodsMessageLogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private GoodsMessageLogs(Name alias, Table<GoodsMessageLogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("商品会话日志"));
    }

    public <O extends Record> GoodsMessageLogs(Table<O> child, ForeignKey<O, GoodsMessageLogsRecord> key) {
        super(child, key, GOODS_MESSAGE_LOGS);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOODS_MESSAGE_LOGS_IDX_GOODS_MESSAGE_LOGS_BUYER_ID, Indexes.GOODS_MESSAGE_LOGS_PRIMARY);
    }

    @Override
    public Identity<GoodsMessageLogsRecord, Long> getIdentity() {
        return Keys.IDENTITY_GOODS_MESSAGE_LOGS;
    }

    @Override
    public UniqueKey<GoodsMessageLogsRecord> getPrimaryKey() {
        return Keys.KEY_GOODS_MESSAGE_LOGS_PRIMARY;
    }

    @Override
    public List<UniqueKey<GoodsMessageLogsRecord>> getKeys() {
        return Arrays.<UniqueKey<GoodsMessageLogsRecord>>asList(Keys.KEY_GOODS_MESSAGE_LOGS_PRIMARY);
    }

    @Override
    public GoodsMessageLogs as(String alias) {
        return new GoodsMessageLogs(DSL.name(alias), this);
    }

    @Override
    public GoodsMessageLogs as(Name alias) {
        return new GoodsMessageLogs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsMessageLogs rename(String name) {
        return new GoodsMessageLogs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsMessageLogs rename(Name name) {
        return new GoodsMessageLogs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, Long, BigDecimal, String, Byte, Byte, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
