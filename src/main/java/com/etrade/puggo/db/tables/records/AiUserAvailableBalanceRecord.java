/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables.records;


import com.etrade.puggo.db.tables.AiUserAvailableBalance;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * AI鉴定用户可用次数
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AiUserAvailableBalanceRecord extends UpdatableRecordImpl<AiUserAvailableBalanceRecord> implements Record7<Integer, Long, Integer, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -706999259;

    /**
     * Setter for <code>etrade_goods.ai_user_available_balance.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>etrade_goods.ai_user_available_balance.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>etrade_goods.ai_user_available_balance.user_id</code>. 用户id
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>etrade_goods.ai_user_available_balance.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>etrade_goods.ai_user_available_balance.kind_id</code>. 品类id，值取自接口返回
     */
    public void setKindId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>etrade_goods.ai_user_available_balance.kind_id</code>. 品类id，值取自接口返回
     */
    public Integer getKindId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>etrade_goods.ai_user_available_balance.used_times</code>. 已调用次数
     */
    public void setUsedTimes(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>etrade_goods.ai_user_available_balance.used_times</code>. 已调用次数
     */
    public Integer getUsedTimes() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>etrade_goods.ai_user_available_balance.available_times</code>. 可用次数
     */
    public void setAvailableTimes(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>etrade_goods.ai_user_available_balance.available_times</code>. 可用次数
     */
    public Integer getAvailableTimes() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>etrade_goods.ai_user_available_balance.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>etrade_goods.ai_user_available_balance.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>etrade_goods.ai_user_available_balance.modified</code>.
     */
    public void setModified(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>etrade_goods.ai_user_available_balance.modified</code>.
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Long, Integer, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Long, Integer, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE.ID;
    }

    @Override
    public Field<Long> field2() {
        return AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE.KIND_ID;
    }

    @Override
    public Field<Integer> field4() {
        return AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE.USED_TIMES;
    }

    @Override
    public Field<Integer> field5() {
        return AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE.AVAILABLE_TIMES;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE.CREATED;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE.MODIFIED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getKindId();
    }

    @Override
    public Integer component4() {
        return getUsedTimes();
    }

    @Override
    public Integer component5() {
        return getAvailableTimes();
    }

    @Override
    public LocalDateTime component6() {
        return getCreated();
    }

    @Override
    public LocalDateTime component7() {
        return getModified();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getKindId();
    }

    @Override
    public Integer value4() {
        return getUsedTimes();
    }

    @Override
    public Integer value5() {
        return getAvailableTimes();
    }

    @Override
    public LocalDateTime value6() {
        return getCreated();
    }

    @Override
    public LocalDateTime value7() {
        return getModified();
    }

    @Override
    public AiUserAvailableBalanceRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AiUserAvailableBalanceRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AiUserAvailableBalanceRecord value3(Integer value) {
        setKindId(value);
        return this;
    }

    @Override
    public AiUserAvailableBalanceRecord value4(Integer value) {
        setUsedTimes(value);
        return this;
    }

    @Override
    public AiUserAvailableBalanceRecord value5(Integer value) {
        setAvailableTimes(value);
        return this;
    }

    @Override
    public AiUserAvailableBalanceRecord value6(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public AiUserAvailableBalanceRecord value7(LocalDateTime value) {
        setModified(value);
        return this;
    }

    @Override
    public AiUserAvailableBalanceRecord values(Integer value1, Long value2, Integer value3, Integer value4, Integer value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AiUserAvailableBalanceRecord
     */
    public AiUserAvailableBalanceRecord() {
        super(AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE);
    }

    /**
     * Create a detached, initialised AiUserAvailableBalanceRecord
     */
    public AiUserAvailableBalanceRecord(Integer id, Long userId, Integer kindId, Integer usedTimes, Integer availableTimes, LocalDateTime created, LocalDateTime modified) {
        super(AiUserAvailableBalance.AI_USER_AVAILABLE_BALANCE);

        set(0, id);
        set(1, userId);
        set(2, kindId);
        set(3, usedTimes);
        set(4, availableTimes);
        set(5, created);
        set(6, modified);
    }
}
