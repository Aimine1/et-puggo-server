/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.UserLogsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户操作日志
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLogs extends TableImpl<UserLogsRecord> {

    private static final long serialVersionUID = -616046454;

    /**
     * The reference instance of <code>etrade_goods.user_logs</code>
     */
    public static final UserLogs USER_LOGS = new UserLogs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserLogsRecord> getRecordType() {
        return UserLogsRecord.class;
    }

    /**
     * The column <code>etrade_goods.user_logs.id</code>.
     */
    public final TableField<UserLogsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.user_logs.type</code>. 操作类型：1收藏商品 2删除商品 3发布商品 4下架商品 5售出商品 6关注用户 7取关用户
     */
    public final TableField<UserLogsRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作类型：1收藏商品 2删除商品 3发布商品 4下架商品 5售出商品 6关注用户 7取关用户");

    /**
     * The column <code>etrade_goods.user_logs.user_id</code>. 操作用户id
     */
    public final TableField<UserLogsRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "操作用户id");

    /**
     * The column <code>etrade_goods.user_logs.target_goods_id</code>. 对象商品id
     */
    public final TableField<UserLogsRecord, Long> TARGET_GOODS_ID = createField(DSL.name("target_goods_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "对象商品id");

    /**
     * The column <code>etrade_goods.user_logs.target_user_id</code>. 对象用户id
     */
    public final TableField<UserLogsRecord, Long> TARGET_USER_ID = createField(DSL.name("target_user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "对象用户id");

    /**
     * The column <code>etrade_goods.user_logs.target_groupon_id</code>. 对象团购券id
     */
    public final TableField<UserLogsRecord, Long> TARGET_GROUPON_ID = createField(DSL.name("target_groupon_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "对象团购券id");

    /**
     * The column <code>etrade_goods.user_logs.created</code>.
     */
    public final TableField<UserLogsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.user_logs</code> table reference
     */
    public UserLogs() {
        this(DSL.name("user_logs"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.user_logs</code> table reference
     */
    public UserLogs(String alias) {
        this(DSL.name(alias), USER_LOGS);
    }

    /**
     * Create an aliased <code>etrade_goods.user_logs</code> table reference
     */
    public UserLogs(Name alias) {
        this(alias, USER_LOGS);
    }

    private UserLogs(Name alias, Table<UserLogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserLogs(Name alias, Table<UserLogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户操作日志"));
    }

    public <O extends Record> UserLogs(Table<O> child, ForeignKey<O, UserLogsRecord> key) {
        super(child, key, USER_LOGS);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_LOGS_PRIMARY);
    }

    @Override
    public Identity<UserLogsRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_LOGS;
    }

    @Override
    public UniqueKey<UserLogsRecord> getPrimaryKey() {
        return Keys.KEY_USER_LOGS_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserLogsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserLogsRecord>>asList(Keys.KEY_USER_LOGS_PRIMARY);
    }

    @Override
    public UserLogs as(String alias) {
        return new UserLogs(DSL.name(alias), this);
    }

    @Override
    public UserLogs as(Name alias) {
        return new UserLogs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLogs rename(String name) {
        return new UserLogs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLogs rename(Name name) {
        return new UserLogs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Long, Long, Long, Long, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
