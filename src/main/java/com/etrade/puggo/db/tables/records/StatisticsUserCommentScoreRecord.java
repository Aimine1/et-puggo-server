/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables.records;


import com.etrade.puggo.db.tables.StatisticsUserCommentScore;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户评分统计
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatisticsUserCommentScoreRecord extends UpdatableRecordImpl<StatisticsUserCommentScoreRecord> implements Record11<Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -905227322;

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.user_id</code>. 用户id
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.average_score</code>. 平均评分，等于用户信用评分
     */
    public void setAverageScore(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.average_score</code>. 平均评分，等于用户信用评分
     */
    public BigDecimal getAverageScore() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.total_score</code>. 总评分
     */
    public void setTotalScore(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.total_score</code>. 总评分
     */
    public BigDecimal getTotalScore() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.from_seller_score</code>. 来自卖家评分
     */
    public void setFromSellerScore(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.from_seller_score</code>. 来自卖家评分
     */
    public BigDecimal getFromSellerScore() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.from_customer_score</code>. 来自买家评分
     */
    public void setFromCustomerScore(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.from_customer_score</code>. 来自买家评分
     */
    public BigDecimal getFromCustomerScore() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.total_comment</code>. 总评论数
     */
    public void setTotalComment(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.total_comment</code>. 总评论数
     */
    public Integer getTotalComment() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.total_from_seller_comment</code>. 来自卖家评论数
     */
    public void setTotalFromSellerComment(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.total_from_seller_comment</code>. 来自卖家评论数
     */
    public Integer getTotalFromSellerComment() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.total_from_customer_comment</code>. 来自买家评论数
     */
    public void setTotalFromCustomerComment(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.total_from_customer_comment</code>. 来自买家评论数
     */
    public Integer getTotalFromCustomerComment() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>etrade_goods.statistics_user_comment_score.modified</code>.
     */
    public void setModified(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>etrade_goods.statistics_user_comment_score.modified</code>.
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.ID;
    }

    @Override
    public Field<Long> field2() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.USER_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.AVERAGE_SCORE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.TOTAL_SCORE;
    }

    @Override
    public Field<BigDecimal> field5() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.FROM_SELLER_SCORE;
    }

    @Override
    public Field<BigDecimal> field6() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.FROM_CUSTOMER_SCORE;
    }

    @Override
    public Field<Integer> field7() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.TOTAL_COMMENT;
    }

    @Override
    public Field<Integer> field8() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.TOTAL_FROM_SELLER_COMMENT;
    }

    @Override
    public Field<Integer> field9() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.TOTAL_FROM_CUSTOMER_COMMENT;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.CREATED;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE.MODIFIED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public BigDecimal component3() {
        return getAverageScore();
    }

    @Override
    public BigDecimal component4() {
        return getTotalScore();
    }

    @Override
    public BigDecimal component5() {
        return getFromSellerScore();
    }

    @Override
    public BigDecimal component6() {
        return getFromCustomerScore();
    }

    @Override
    public Integer component7() {
        return getTotalComment();
    }

    @Override
    public Integer component8() {
        return getTotalFromSellerComment();
    }

    @Override
    public Integer component9() {
        return getTotalFromCustomerComment();
    }

    @Override
    public LocalDateTime component10() {
        return getCreated();
    }

    @Override
    public LocalDateTime component11() {
        return getModified();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public BigDecimal value3() {
        return getAverageScore();
    }

    @Override
    public BigDecimal value4() {
        return getTotalScore();
    }

    @Override
    public BigDecimal value5() {
        return getFromSellerScore();
    }

    @Override
    public BigDecimal value6() {
        return getFromCustomerScore();
    }

    @Override
    public Integer value7() {
        return getTotalComment();
    }

    @Override
    public Integer value8() {
        return getTotalFromSellerComment();
    }

    @Override
    public Integer value9() {
        return getTotalFromCustomerComment();
    }

    @Override
    public LocalDateTime value10() {
        return getCreated();
    }

    @Override
    public LocalDateTime value11() {
        return getModified();
    }

    @Override
    public StatisticsUserCommentScoreRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value3(BigDecimal value) {
        setAverageScore(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value4(BigDecimal value) {
        setTotalScore(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value5(BigDecimal value) {
        setFromSellerScore(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value6(BigDecimal value) {
        setFromCustomerScore(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value7(Integer value) {
        setTotalComment(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value8(Integer value) {
        setTotalFromSellerComment(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value9(Integer value) {
        setTotalFromCustomerComment(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value10(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord value11(LocalDateTime value) {
        setModified(value);
        return this;
    }

    @Override
    public StatisticsUserCommentScoreRecord values(Long value1, Long value2, BigDecimal value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, Integer value7, Integer value8, Integer value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StatisticsUserCommentScoreRecord
     */
    public StatisticsUserCommentScoreRecord() {
        super(StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE);
    }

    /**
     * Create a detached, initialised StatisticsUserCommentScoreRecord
     */
    public StatisticsUserCommentScoreRecord(Long id, Long userId, BigDecimal averageScore, BigDecimal totalScore, BigDecimal fromSellerScore, BigDecimal fromCustomerScore, Integer totalComment, Integer totalFromSellerComment, Integer totalFromCustomerComment, LocalDateTime created, LocalDateTime modified) {
        super(StatisticsUserCommentScore.STATISTICS_USER_COMMENT_SCORE);

        set(0, id);
        set(1, userId);
        set(2, averageScore);
        set(3, totalScore);
        set(4, fromSellerScore);
        set(5, fromCustomerScore);
        set(6, totalComment);
        set(7, totalFromSellerComment);
        set(8, totalFromCustomerComment);
        set(9, created);
        set(10, modified);
    }
}
