/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.UserRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row22;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 个人信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

    private static final long serialVersionUID = 1400632099;

    /**
     * The reference instance of <code>etrade_goods.user</code>
     */
    public static final User USER = new User();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRecord> getRecordType() {
        return UserRecord.class;
    }

    /**
     * The column <code>etrade_goods.user.id</code>.
     */
    public final TableField<UserRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.user.nickname</code>. 用户昵称
     */
    public final TableField<UserRecord, String> NICKNAME = createField(DSL.name("nickname"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户昵称");

    /**
     * The column <code>etrade_goods.user.gender</code>. 性别，0男 1女 2其他
     */
    public final TableField<UserRecord, Byte> GENDER = createField(DSL.name("gender"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "性别，0男 1女 2其他");

    /**
     * The column <code>etrade_goods.user.avatar</code>. 头像
     */
    public final TableField<UserRecord, String> AVATAR = createField(DSL.name("avatar"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "头像");

    /**
     * The column <code>etrade_goods.user.introduction</code>. 简介
     */
    public final TableField<UserRecord, String> INTRODUCTION = createField(DSL.name("introduction"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "简介");

    /**
     * The column <code>etrade_goods.user.email</code>. 电子邮箱
     */
    public final TableField<UserRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "电子邮箱");

    /**
     * The column <code>etrade_goods.user.phone</code>. 电话号码
     */
    public final TableField<UserRecord, String> PHONE = createField(DSL.name("phone"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "电话号码");

    /**
     * The column <code>etrade_goods.user.nickname_last_time</code>. 昵称最后修改日期，昵称修改有频率限制
     */
    public final TableField<UserRecord, LocalDateTime> NICKNAME_LAST_TIME = createField(DSL.name("nickname_last_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "昵称最后修改日期，昵称修改有频率限制");

    /**
     * The column <code>etrade_goods.user.birthdate</code>. 出生日期
     */
    public final TableField<UserRecord, LocalDate> BIRTHDATE = createField(DSL.name("birthdate"), org.jooq.impl.SQLDataType.LOCALDATE, this, "出生日期");

    /**
     * The column <code>etrade_goods.user.join_date</code>. 注册日期
     */
    public final TableField<UserRecord, LocalDate> JOIN_DATE = createField(DSL.name("join_date"), org.jooq.impl.SQLDataType.LOCALDATE, this, "注册日期");

    /**
     * The column <code>etrade_goods.user.deleted</code>. 是否弃用, 1 : 废弃，0 : 正常
     */
    public final TableField<UserRecord, Byte> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否弃用, 1 : 废弃，0 : 正常");

    /**
     * The column <code>etrade_goods.user.country</code>. 用户所在国家
     */
    public final TableField<UserRecord, String> COUNTRY = createField(DSL.name("country"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户所在国家");

    /**
     * The column <code>etrade_goods.user.province</code>. 用户所在省份/州
     */
    public final TableField<UserRecord, String> PROVINCE = createField(DSL.name("province"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户所在省份/州");

    /**
     * The column <code>etrade_goods.user.city</code>. 用户所在城市
     */
    public final TableField<UserRecord, String> CITY = createField(DSL.name("city"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户所在城市");

    /**
     * The column <code>etrade_goods.user.district</code>. 用户所在区域/县
     */
    public final TableField<UserRecord, String> DISTRICT = createField(DSL.name("district"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户所在区域/县");

    /**
     * The column <code>etrade_goods.user.credit_rating</code>. 信誉等级：1-5 数字越大信誉越好
     */
    public final TableField<UserRecord, BigDecimal> CREDIT_RATING = createField(DSL.name("credit_rating"), org.jooq.impl.SQLDataType.DECIMAL(10, 1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0", org.jooq.impl.SQLDataType.DECIMAL)), this, "信誉等级：1-5 数字越大信誉越好");

    /**
     * The column <code>etrade_goods.user.user_role</code>. 用户角色
     */
    public final TableField<UserRecord, String> USER_ROLE = createField(DSL.name("user_role"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户角色");

    /**
     * The column <code>etrade_goods.user.is_verified</code>. 是否认证: 1认证 0未认证
     */
    public final TableField<UserRecord, Byte> IS_VERIFIED = createField(DSL.name("is_verified"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否认证: 1认证 0未认证");

    /**
     * The column <code>etrade_goods.user.payment_customer_id</code>. 支付账户id
     */
    public final TableField<UserRecord, String> PAYMENT_CUSTOMER_ID = createField(DSL.name("payment_customer_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付账户id");

    /**
     * The column <code>etrade_goods.user.payment_seller_id</code>. 商家身份支付账户id
     */
    public final TableField<UserRecord, String> PAYMENT_SELLER_ID = createField(DSL.name("payment_seller_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商家身份支付账户id");

    /**
     * The column <code>etrade_goods.user.created</code>.
     */
    public final TableField<UserRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.user.modified</code>.
     */
    public final TableField<UserRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.user</code> table reference
     */
    public User() {
        this(DSL.name("user"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.user</code> table reference
     */
    public User(String alias) {
        this(DSL.name(alias), USER);
    }

    /**
     * Create an aliased <code>etrade_goods.user</code> table reference
     */
    public User(Name alias) {
        this(alias, USER);
    }

    private User(Name alias, Table<UserRecord> aliased) {
        this(alias, aliased, null);
    }

    private User(Name alias, Table<UserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("个人信息"));
    }

    public <O extends Record> User(Table<O> child, ForeignKey<O, UserRecord> key) {
        super(child, key, USER);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_IDX_NICKNAME, Indexes.USER_PRIMARY);
    }

    @Override
    public Identity<UserRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER;
    }

    @Override
    public UniqueKey<UserRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY);
    }

    @Override
    public User as(String alias) {
        return new User(DSL.name(alias), this);
    }

    @Override
    public User as(Name alias) {
        return new User(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public User rename(String name) {
        return new User(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public User rename(Name name) {
        return new User(name, null);
    }

    // -------------------------------------------------------------------------
    // Row22 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row22<Long, String, Byte, String, String, String, String, LocalDateTime, LocalDate, LocalDate, Byte, String, String, String, String, BigDecimal, String, Byte, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row22) super.fieldsRow();
    }
}
