/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables.records;


import com.etrade.puggo.db.tables.UserFans;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户粉丝表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserFansRecord extends UpdatableRecordImpl<UserFansRecord> implements Record5<Long, Long, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -833326405;

    /**
     * Setter for <code>etrade_goods.user_fans.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>etrade_goods.user_fans.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>etrade_goods.user_fans.user_id</code>. 用户id
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>etrade_goods.user_fans.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>etrade_goods.user_fans.fans_user_id</code>. 粉丝用户id
     */
    public void setFansUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>etrade_goods.user_fans.fans_user_id</code>. 粉丝用户id
     */
    public Long getFansUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>etrade_goods.user_fans.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>etrade_goods.user_fans.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>etrade_goods.user_fans.modified</code>.
     */
    public void setModified(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>etrade_goods.user_fans.modified</code>.
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserFans.USER_FANS.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserFans.USER_FANS.USER_ID;
    }

    @Override
    public Field<Long> field3() {
        return UserFans.USER_FANS.FANS_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UserFans.USER_FANS.CREATED;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return UserFans.USER_FANS.MODIFIED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Long component3() {
        return getFansUserId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreated();
    }

    @Override
    public LocalDateTime component5() {
        return getModified();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Long value3() {
        return getFansUserId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreated();
    }

    @Override
    public LocalDateTime value5() {
        return getModified();
    }

    @Override
    public UserFansRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserFansRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserFansRecord value3(Long value) {
        setFansUserId(value);
        return this;
    }

    @Override
    public UserFansRecord value4(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public UserFansRecord value5(LocalDateTime value) {
        setModified(value);
        return this;
    }

    @Override
    public UserFansRecord values(Long value1, Long value2, Long value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserFansRecord
     */
    public UserFansRecord() {
        super(UserFans.USER_FANS);
    }

    /**
     * Create a detached, initialised UserFansRecord
     */
    public UserFansRecord(Long id, Long userId, Long fansUserId, LocalDateTime created, LocalDateTime modified) {
        super(UserFans.USER_FANS);

        set(0, id);
        set(1, userId);
        set(2, fansUserId);
        set(3, created);
        set(4, modified);
    }
}
