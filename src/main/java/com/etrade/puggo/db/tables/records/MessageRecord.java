/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables.records;


import com.etrade.puggo.db.tables.Message;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户IM消息记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record20<Long, String, String, String, String, String, String, String, String, String, String, String, String, Byte, Byte, String, String, String, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1957441558;

    /**
     * Setter for <code>etrade_goods.message.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>etrade_goods.message.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>etrade_goods.message.conv_type</code>. 会话具体类型, 默认 PERSON（单聊会话内消息）
     */
    public void setConvType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>etrade_goods.message.conv_type</code>. 会话具体类型, 默认 PERSON（单聊会话内消息）
     */
    public String getConvType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>etrade_goods.message.to_account</code>. 消息接收者的用户账号或者群id
     */
    public void setToAccount(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>etrade_goods.message.to_account</code>. 消息接收者的用户账号或者群id
     */
    public String getToAccount() {
        return (String) get(2);
    }

    /**
     * Setter for <code>etrade_goods.message.from_account</code>. 消息发送者的用户账号
     */
    public void setFromAccount(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>etrade_goods.message.from_account</code>. 消息发送者的用户账号
     */
    public String getFromAccount() {
        return (String) get(3);
    }

    /**
     * Setter for <code>etrade_goods.message.from_client_type</code>. 发送客户端类型： AOS、IOS、PC、WINPHONE、WEB、REST
     */
    public void setFromClientType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>etrade_goods.message.from_client_type</code>. 发送客户端类型： AOS、IOS、PC、WINPHONE、WEB、REST
     */
    public String getFromClientType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>etrade_goods.message.from_device_id</code>. 发送设备id
     */
    public void setFromDeviceId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>etrade_goods.message.from_device_id</code>. 发送设备id
     */
    public String getFromDeviceId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>etrade_goods.message.from_nick</code>. 发送方昵称
     */
    public void setFromNick(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>etrade_goods.message.from_nick</code>. 发送方昵称
     */
    public String getFromNick() {
        return (String) get(6);
    }

    /**
     * Setter for <code>etrade_goods.message.msg_timestamp</code>. 消息发送时间
     */
    public void setMsgTimestamp(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>etrade_goods.message.msg_timestamp</code>. 消息发送时间
     */
    public String getMsgTimestamp() {
        return (String) get(7);
    }

    /**
     * Setter for <code>etrade_goods.message.msg_type</code>. TEXT:文本消息,PICTURE:图片消息,AUDIO:语音消息,VIDEO:视频消息,LOCATION:地理位置消息
     */
    public void setMsgType(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>etrade_goods.message.msg_type</code>. TEXT:文本消息,PICTURE:图片消息,AUDIO:语音消息,VIDEO:视频消息,LOCATION:地理位置消息
     */
    public String getMsgType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>etrade_goods.message.body</code>. 消息内容
     */
    public void setBody(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>etrade_goods.message.body</code>. 消息内容
     */
    public String getBody() {
        return (String) get(9);
    }

    /**
     * Setter for <code>etrade_goods.message.attach</code>. 附加消息
     */
    public void setAttach(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>etrade_goods.message.attach</code>. 附加消息
     */
    public String getAttach() {
        return (String) get(10);
    }

    /**
     * Setter for <code>etrade_goods.message.msgid_client</code>. 客户端生成的消息id
     */
    public void setMsgidClient(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>etrade_goods.message.msgid_client</code>. 客户端生成的消息id
     */
    public String getMsgidClient() {
        return (String) get(11);
    }

    /**
     * Setter for <code>etrade_goods.message.msgid_server</code>. 服务端生成的消息id
     */
    public void setMsgidServer(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>etrade_goods.message.msgid_server</code>. 服务端生成的消息id
     */
    public String getMsgidServer() {
        return (String) get(12);
    }

    /**
     * Setter for <code>etrade_goods.message.resend_flag</code>. 重发标记：0不是重发, 1是重发
     */
    public void setResendFlag(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>etrade_goods.message.resend_flag</code>. 重发标记：0不是重发, 1是重发
     */
    public Byte getResendFlag() {
        return (Byte) get(13);
    }

    /**
     * Setter for <code>etrade_goods.message.custom_safe_flag</code>. 自定义系统通知消息是否存离线:0:不存, 1:存
     */
    public void setCustomSafeFlag(Byte value) {
        set(14, value);
    }

    /**
     * Getter for <code>etrade_goods.message.custom_safe_flag</code>. 自定义系统通知消息是否存离线:0:不存, 1:存
     */
    public Byte getCustomSafeFlag() {
        return (Byte) get(14);
    }

    /**
     * Setter for <code>etrade_goods.message.custom_apns_text</code>. 自定义系统通知消息推送文本
     */
    public void setCustomApnsText(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>etrade_goods.message.custom_apns_text</code>. 自定义系统通知消息推送文本
     */
    public String getCustomApnsText() {
        return (String) get(15);
    }

    /**
     * Setter for <code>etrade_goods.message.ext</code>. 消息拓展字段
     */
    public void setExt(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>etrade_goods.message.ext</code>. 消息拓展字段
     */
    public String getExt() {
        return (String) get(16);
    }

    /**
     * Setter for <code>etrade_goods.message.ip</code>. 消息发送方的客户端IP地址(仅SDK发送的消息才有该字段)
     */
    public void setIp(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>etrade_goods.message.ip</code>. 消息发送方的客户端IP地址(仅SDK发送的消息才有该字段)
     */
    public String getIp() {
        return (String) get(17);
    }

    /**
     * Setter for <code>etrade_goods.message.port</code>. 消息发送方的客户端端口号(仅SDK发送的消息才有该字段)
     */
    public void setPort(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>etrade_goods.message.port</code>. 消息发送方的客户端端口号(仅SDK发送的消息才有该字段)
     */
    public Integer getPort() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>etrade_goods.message.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(19, value);
    }

    /**
     * Getter for <code>etrade_goods.message.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<Long, String, String, String, String, String, String, String, String, String, String, String, String, Byte, Byte, String, String, String, Integer, LocalDateTime> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<Long, String, String, String, String, String, String, String, String, String, String, String, String, Byte, Byte, String, String, String, Integer, LocalDateTime> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return Message.MESSAGE.CONV_TYPE;
    }

    @Override
    public Field<String> field3() {
        return Message.MESSAGE.TO_ACCOUNT;
    }

    @Override
    public Field<String> field4() {
        return Message.MESSAGE.FROM_ACCOUNT;
    }

    @Override
    public Field<String> field5() {
        return Message.MESSAGE.FROM_CLIENT_TYPE;
    }

    @Override
    public Field<String> field6() {
        return Message.MESSAGE.FROM_DEVICE_ID;
    }

    @Override
    public Field<String> field7() {
        return Message.MESSAGE.FROM_NICK;
    }

    @Override
    public Field<String> field8() {
        return Message.MESSAGE.MSG_TIMESTAMP;
    }

    @Override
    public Field<String> field9() {
        return Message.MESSAGE.MSG_TYPE;
    }

    @Override
    public Field<String> field10() {
        return Message.MESSAGE.BODY;
    }

    @Override
    public Field<String> field11() {
        return Message.MESSAGE.ATTACH;
    }

    @Override
    public Field<String> field12() {
        return Message.MESSAGE.MSGID_CLIENT;
    }

    @Override
    public Field<String> field13() {
        return Message.MESSAGE.MSGID_SERVER;
    }

    @Override
    public Field<Byte> field14() {
        return Message.MESSAGE.RESEND_FLAG;
    }

    @Override
    public Field<Byte> field15() {
        return Message.MESSAGE.CUSTOM_SAFE_FLAG;
    }

    @Override
    public Field<String> field16() {
        return Message.MESSAGE.CUSTOM_APNS_TEXT;
    }

    @Override
    public Field<String> field17() {
        return Message.MESSAGE.EXT;
    }

    @Override
    public Field<String> field18() {
        return Message.MESSAGE.IP;
    }

    @Override
    public Field<Integer> field19() {
        return Message.MESSAGE.PORT;
    }

    @Override
    public Field<LocalDateTime> field20() {
        return Message.MESSAGE.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getConvType();
    }

    @Override
    public String component3() {
        return getToAccount();
    }

    @Override
    public String component4() {
        return getFromAccount();
    }

    @Override
    public String component5() {
        return getFromClientType();
    }

    @Override
    public String component6() {
        return getFromDeviceId();
    }

    @Override
    public String component7() {
        return getFromNick();
    }

    @Override
    public String component8() {
        return getMsgTimestamp();
    }

    @Override
    public String component9() {
        return getMsgType();
    }

    @Override
    public String component10() {
        return getBody();
    }

    @Override
    public String component11() {
        return getAttach();
    }

    @Override
    public String component12() {
        return getMsgidClient();
    }

    @Override
    public String component13() {
        return getMsgidServer();
    }

    @Override
    public Byte component14() {
        return getResendFlag();
    }

    @Override
    public Byte component15() {
        return getCustomSafeFlag();
    }

    @Override
    public String component16() {
        return getCustomApnsText();
    }

    @Override
    public String component17() {
        return getExt();
    }

    @Override
    public String component18() {
        return getIp();
    }

    @Override
    public Integer component19() {
        return getPort();
    }

    @Override
    public LocalDateTime component20() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getConvType();
    }

    @Override
    public String value3() {
        return getToAccount();
    }

    @Override
    public String value4() {
        return getFromAccount();
    }

    @Override
    public String value5() {
        return getFromClientType();
    }

    @Override
    public String value6() {
        return getFromDeviceId();
    }

    @Override
    public String value7() {
        return getFromNick();
    }

    @Override
    public String value8() {
        return getMsgTimestamp();
    }

    @Override
    public String value9() {
        return getMsgType();
    }

    @Override
    public String value10() {
        return getBody();
    }

    @Override
    public String value11() {
        return getAttach();
    }

    @Override
    public String value12() {
        return getMsgidClient();
    }

    @Override
    public String value13() {
        return getMsgidServer();
    }

    @Override
    public Byte value14() {
        return getResendFlag();
    }

    @Override
    public Byte value15() {
        return getCustomSafeFlag();
    }

    @Override
    public String value16() {
        return getCustomApnsText();
    }

    @Override
    public String value17() {
        return getExt();
    }

    @Override
    public String value18() {
        return getIp();
    }

    @Override
    public Integer value19() {
        return getPort();
    }

    @Override
    public LocalDateTime value20() {
        return getCreated();
    }

    @Override
    public MessageRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(String value) {
        setConvType(value);
        return this;
    }

    @Override
    public MessageRecord value3(String value) {
        setToAccount(value);
        return this;
    }

    @Override
    public MessageRecord value4(String value) {
        setFromAccount(value);
        return this;
    }

    @Override
    public MessageRecord value5(String value) {
        setFromClientType(value);
        return this;
    }

    @Override
    public MessageRecord value6(String value) {
        setFromDeviceId(value);
        return this;
    }

    @Override
    public MessageRecord value7(String value) {
        setFromNick(value);
        return this;
    }

    @Override
    public MessageRecord value8(String value) {
        setMsgTimestamp(value);
        return this;
    }

    @Override
    public MessageRecord value9(String value) {
        setMsgType(value);
        return this;
    }

    @Override
    public MessageRecord value10(String value) {
        setBody(value);
        return this;
    }

    @Override
    public MessageRecord value11(String value) {
        setAttach(value);
        return this;
    }

    @Override
    public MessageRecord value12(String value) {
        setMsgidClient(value);
        return this;
    }

    @Override
    public MessageRecord value13(String value) {
        setMsgidServer(value);
        return this;
    }

    @Override
    public MessageRecord value14(Byte value) {
        setResendFlag(value);
        return this;
    }

    @Override
    public MessageRecord value15(Byte value) {
        setCustomSafeFlag(value);
        return this;
    }

    @Override
    public MessageRecord value16(String value) {
        setCustomApnsText(value);
        return this;
    }

    @Override
    public MessageRecord value17(String value) {
        setExt(value);
        return this;
    }

    @Override
    public MessageRecord value18(String value) {
        setIp(value);
        return this;
    }

    @Override
    public MessageRecord value19(Integer value) {
        setPort(value);
        return this;
    }

    @Override
    public MessageRecord value20(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public MessageRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, Byte value14, Byte value15, String value16, String value17, String value18, Integer value19, LocalDateTime value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Long id, String convType, String toAccount, String fromAccount, String fromClientType, String fromDeviceId, String fromNick, String msgTimestamp, String msgType, String body, String attach, String msgidClient, String msgidServer, Byte resendFlag, Byte customSafeFlag, String customApnsText, String ext, String ip, Integer port, LocalDateTime created) {
        super(Message.MESSAGE);

        set(0, id);
        set(1, convType);
        set(2, toAccount);
        set(3, fromAccount);
        set(4, fromClientType);
        set(5, fromDeviceId);
        set(6, fromNick);
        set(7, msgTimestamp);
        set(8, msgType);
        set(9, body);
        set(10, attach);
        set(11, msgidClient);
        set(12, msgidServer);
        set(13, resendFlag);
        set(14, customSafeFlag);
        set(15, customApnsText);
        set(16, ext);
        set(17, ip);
        set(18, port);
        set(19, created);
    }
}
