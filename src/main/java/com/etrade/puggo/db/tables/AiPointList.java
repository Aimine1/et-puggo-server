/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.AiPointListRecord;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import javax.annotation.processing.Generated;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * AI鉴定点查询
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AiPointList extends TableImpl<AiPointListRecord> {

    private static final long serialVersionUID = 493220541;

    /**
     * The reference instance of <code>etrade_goods.ai_point_list</code>
     */
    public static final AiPointList AI_POINT_LIST = new AiPointList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AiPointListRecord> getRecordType() {
        return AiPointListRecord.class;
    }

    /**
     * The column <code>etrade_goods.ai_point_list.id</code>. 鉴定点id，值取自接口返回
     */
    public final TableField<AiPointListRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "鉴定点id，值取自接口返回");

    /**
     * The column <code>etrade_goods.ai_point_list.kind_id</code>. 品类id
     */
    public final TableField<AiPointListRecord, Integer> KIND_ID = createField(DSL.name("kind_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "品类id");

    /**
     * The column <code>etrade_goods.ai_point_list.brand_id</code>. 品牌id
     */
    public final TableField<AiPointListRecord, Integer> BRAND_ID = createField(DSL.name("brand_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "品牌id");

    /**
     * The column <code>etrade_goods.ai_point_list.series_id</code>. 系列id
     */
    public final TableField<AiPointListRecord, Integer> SERIES_ID = createField(DSL.name("series_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "系列id");

    /**
     * The column <code>etrade_goods.ai_point_list.category_id</code>. 关联鉴定点的品类/品牌/系列id（鉴定点请求列表中传的那个）
     */
    public final TableField<AiPointListRecord, Integer> CATEGORY_ID = createField(DSL.name("category_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "关联鉴定点的品类/品牌/系列id（鉴定点请求列表中传的那个）");

    /**
     * The column <code>etrade_goods.ai_point_list.description</code>. 鉴定点描述
     */
    public final TableField<AiPointListRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "鉴定点描述");

    /**
     * The column <code>etrade_goods.ai_point_list.example_img</code>. 示例图片
     */
    public final TableField<AiPointListRecord, String> EXAMPLE_IMG = createField(DSL.name("example_img"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "示例图片");

    /**
     * The column <code>etrade_goods.ai_point_list.must</code>. 1-必传 2-选传
     */
    public final TableField<AiPointListRecord, Byte> MUST = createField(DSL.name("must"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1-必传 2-选传");

    /**
     * The column <code>etrade_goods.ai_point_list.important</code>. 是否重要:0-不重要 1-重要
     */
    public final TableField<AiPointListRecord, Byte> IMPORTANT = createField(DSL.name("important"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否重要:0-不重要 1-重要");

    /**
     * The column <code>etrade_goods.ai_point_list.point_name</code>. 鉴定点名称
     */
    public final TableField<AiPointListRecord, String> POINT_NAME = createField(DSL.name("point_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "鉴定点名称");

    /**
     * The column <code>etrade_goods.ai_point_list.stick_figure_url</code>. 简笔画小图
     */
    public final TableField<AiPointListRecord, String> STICK_FIGURE_URL = createField(DSL.name("stick_figure_url"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "简笔画小图");

    /**
     * The column <code>etrade_goods.ai_point_list.big_stick_figure_url</code>. 简笔画大图
     */
    public final TableField<AiPointListRecord, String> BIG_STICK_FIGURE_URL = createField(DSL.name("big_stick_figure_url"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "简笔画大图");

    /**
     * The column <code>etrade_goods.ai_point_list.created</code>.
     */
    public final TableField<AiPointListRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.ai_point_list.modified</code>.
     */
    public final TableField<AiPointListRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.ai_point_list</code> table reference
     */
    public AiPointList() {
        this(DSL.name("ai_point_list"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.ai_point_list</code> table reference
     */
    public AiPointList(String alias) {
        this(DSL.name(alias), AI_POINT_LIST);
    }

    /**
     * Create an aliased <code>etrade_goods.ai_point_list</code> table reference
     */
    public AiPointList(Name alias) {
        this(alias, AI_POINT_LIST);
    }

    private AiPointList(Name alias, Table<AiPointListRecord> aliased) {
        this(alias, aliased, null);
    }

    private AiPointList(Name alias, Table<AiPointListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("AI鉴定点查询"));
    }

    public <O extends Record> AiPointList(Table<O> child, ForeignKey<O, AiPointListRecord> key) {
        super(child, key, AI_POINT_LIST);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AI_POINT_LIST_IDX_KIND_BRAND_SERIES_ID, Indexes.AI_POINT_LIST_PRIMARY);
    }

    @Override
    public UniqueKey<AiPointListRecord> getPrimaryKey() {
        return Keys.KEY_AI_POINT_LIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<AiPointListRecord>> getKeys() {
        return Arrays.<UniqueKey<AiPointListRecord>>asList(Keys.KEY_AI_POINT_LIST_PRIMARY);
    }

    @Override
    public AiPointList as(String alias) {
        return new AiPointList(DSL.name(alias), this);
    }

    @Override
    public AiPointList as(Name alias) {
        return new AiPointList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AiPointList rename(String name) {
        return new AiPointList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AiPointList rename(Name name) {
        return new AiPointList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, Integer, Integer, Integer, Integer, String, String, Byte, Byte, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
