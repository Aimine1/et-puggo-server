/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.PaymentInvoiceRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 支付发票表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentInvoice extends TableImpl<PaymentInvoiceRecord> {

    private static final long serialVersionUID = 244753163;

    /**
     * The reference instance of <code>etrade_goods.payment_invoice</code>
     */
    public static final PaymentInvoice PAYMENT_INVOICE = new PaymentInvoice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentInvoiceRecord> getRecordType() {
        return PaymentInvoiceRecord.class;
    }

    /**
     * The column <code>etrade_goods.payment_invoice.id</code>.
     */
    public final TableField<PaymentInvoiceRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.payment_invoice.pay_no</code>. 支付编号
     */
    public final TableField<PaymentInvoiceRecord, String> PAY_NO = createField(DSL.name("pay_no"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付编号");

    /**
     * The column <code>etrade_goods.payment_invoice.user_id</code>. 买家用户id
     */
    public final TableField<PaymentInvoiceRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "买家用户id");

    /**
     * The column <code>etrade_goods.payment_invoice.title</code>. 支付抬头
     */
    public final TableField<PaymentInvoiceRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付抬头");

    /**
     * The column <code>etrade_goods.payment_invoice.other_fees</code>. 其他系统所得费用
     */
    public final TableField<PaymentInvoiceRecord, BigDecimal> OTHER_FEES = createField(DSL.name("other_fees"), org.jooq.impl.SQLDataType.DECIMAL(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "其他系统所得费用");

    /**
     * The column <code>etrade_goods.payment_invoice.tax</code>. 商品税或者叫佣金，系统所得费用
     */
    public final TableField<PaymentInvoiceRecord, BigDecimal> TAX = createField(DSL.name("tax"), org.jooq.impl.SQLDataType.DECIMAL(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "商品税或者叫佣金，系统所得费用");

    /**
     * The column <code>etrade_goods.payment_invoice.amount</code>. 商家所得费用，如商品费用
     */
    public final TableField<PaymentInvoiceRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.DECIMAL(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "商家所得费用，如商品费用");

    /**
     * The column <code>etrade_goods.payment_invoice.payment_method_id</code>. 买家支付方式id
     */
    public final TableField<PaymentInvoiceRecord, String> PAYMENT_METHOD_ID = createField(DSL.name("payment_method_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "买家支付方式id");

    /**
     * The column <code>etrade_goods.payment_invoice.payment_type</code>. 买家支付类型
     */
    public final TableField<PaymentInvoiceRecord, String> PAYMENT_TYPE = createField(DSL.name("payment_type"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "买家支付类型");

    /**
     * The column <code>etrade_goods.payment_invoice.billing_address_id</code>. 账单地址id
     */
    public final TableField<PaymentInvoiceRecord, Integer> BILLING_ADDRESS_ID = createField(DSL.name("billing_address_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "账单地址id");

    /**
     * The column <code>etrade_goods.payment_invoice.invoice_id</code>. 支付成功后发票id
     */
    public final TableField<PaymentInvoiceRecord, String> INVOICE_ID = createField(DSL.name("invoice_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付成功后发票id");

    /**
     * The column <code>etrade_goods.payment_invoice.payment_card_id</code>. 如果付款方式是card，支付卡号id
     */
    public final TableField<PaymentInvoiceRecord, Integer> PAYMENT_CARD_ID = createField(DSL.name("payment_card_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "如果付款方式是card，支付卡号id");

    /**
     * The column <code>etrade_goods.payment_invoice.payment_seller_id</code>. 商家支付账号id
     */
    public final TableField<PaymentInvoiceRecord, String> PAYMENT_SELLER_ID = createField(DSL.name("payment_seller_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商家支付账号id");

    /**
     * The column <code>etrade_goods.payment_invoice.payment_intent_id</code>. 支付意向id
     */
    public final TableField<PaymentInvoiceRecord, String> PAYMENT_INTENT_ID = createField(DSL.name("payment_intent_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付意向id");

    /**
     * The column <code>etrade_goods.payment_invoice.client_secret</code>. 客户端秘钥
     */
    public final TableField<PaymentInvoiceRecord, String> CLIENT_SECRET = createField(DSL.name("client_secret"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "客户端秘钥");

    /**
     * The column <code>etrade_goods.payment_invoice.ai_kind_id</code>. ai鉴定类别
     */
    public final TableField<PaymentInvoiceRecord, Integer> AI_KIND_ID = createField(DSL.name("ai_kind_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "ai鉴定类别");

    /**
     * The column <code>etrade_goods.payment_invoice.ai_plus_available_times</code>. ai鉴定次数
     */
    public final TableField<PaymentInvoiceRecord, Integer> AI_PLUS_AVAILABLE_TIMES = createField(DSL.name("ai_plus_available_times"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "ai鉴定次数");

    /**
     * The column <code>etrade_goods.payment_invoice.created</code>.
     */
    public final TableField<PaymentInvoiceRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.payment_invoice.modified</code>.
     */
    public final TableField<PaymentInvoiceRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.payment_invoice</code> table reference
     */
    public PaymentInvoice() {
        this(DSL.name("payment_invoice"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.payment_invoice</code> table reference
     */
    public PaymentInvoice(String alias) {
        this(DSL.name(alias), PAYMENT_INVOICE);
    }

    /**
     * Create an aliased <code>etrade_goods.payment_invoice</code> table reference
     */
    public PaymentInvoice(Name alias) {
        this(alias, PAYMENT_INVOICE);
    }

    private PaymentInvoice(Name alias, Table<PaymentInvoiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentInvoice(Name alias, Table<PaymentInvoiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("支付发票表"));
    }

    public <O extends Record> PaymentInvoice(Table<O> child, ForeignKey<O, PaymentInvoiceRecord> key) {
        super(child, key, PAYMENT_INVOICE);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAYMENT_INVOICE_IDX_PAYMENT_INVOICE_USER_ID, Indexes.PAYMENT_INVOICE_PRIMARY);
    }

    @Override
    public Identity<PaymentInvoiceRecord, Long> getIdentity() {
        return Keys.IDENTITY_PAYMENT_INVOICE;
    }

    @Override
    public UniqueKey<PaymentInvoiceRecord> getPrimaryKey() {
        return Keys.KEY_PAYMENT_INVOICE_PRIMARY;
    }

    @Override
    public List<UniqueKey<PaymentInvoiceRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentInvoiceRecord>>asList(Keys.KEY_PAYMENT_INVOICE_PRIMARY);
    }

    @Override
    public PaymentInvoice as(String alias) {
        return new PaymentInvoice(DSL.name(alias), this);
    }

    @Override
    public PaymentInvoice as(Name alias) {
        return new PaymentInvoice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentInvoice rename(String name) {
        return new PaymentInvoice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentInvoice rename(Name name) {
        return new PaymentInvoice(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Long, String, Long, String, BigDecimal, BigDecimal, BigDecimal, String, String, Integer, String, Integer, String, String, String, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
