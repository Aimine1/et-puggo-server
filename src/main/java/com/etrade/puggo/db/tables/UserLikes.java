/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.UserLikesRecord;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import javax.annotation.processing.Generated;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户收藏表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLikes extends TableImpl<UserLikesRecord> {

    private static final long serialVersionUID = 82673166;

    /**
     * The reference instance of <code>etrade_goods.user_likes</code>
     */
    public static final UserLikes USER_LIKES = new UserLikes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserLikesRecord> getRecordType() {
        return UserLikesRecord.class;
    }

    /**
     * The column <code>etrade_goods.user_likes.id</code>.
     */
    public final TableField<UserLikesRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.user_likes.user_id</code>. 用户id
     */
    public final TableField<UserLikesRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "用户id");

    /**
     * The column <code>etrade_goods.user_likes.goods_id</code>. 商品id
     */
    public final TableField<UserLikesRecord, Long> GOODS_ID = createField(DSL.name("goods_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "商品id");

    /**
     * The column <code>etrade_goods.user_likes.groupon_id</code>. 团购券id
     */
    public final TableField<UserLikesRecord, Long> GROUPON_ID = createField(DSL.name("groupon_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "团购券id");

    /**
     * The column <code>etrade_goods.user_likes.created</code>.
     */
    public final TableField<UserLikesRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.user_likes.modified</code>.
     */
    public final TableField<UserLikesRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.user_likes</code> table reference
     */
    public UserLikes() {
        this(DSL.name("user_likes"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.user_likes</code> table reference
     */
    public UserLikes(String alias) {
        this(DSL.name(alias), USER_LIKES);
    }

    /**
     * Create an aliased <code>etrade_goods.user_likes</code> table reference
     */
    public UserLikes(Name alias) {
        this(alias, USER_LIKES);
    }

    private UserLikes(Name alias, Table<UserLikesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserLikes(Name alias, Table<UserLikesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户收藏表"));
    }

    public <O extends Record> UserLikes(Table<O> child, ForeignKey<O, UserLikesRecord> key) {
        super(child, key, USER_LIKES);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_LIKES_IDX_USER_ID_GROUPON_ID, Indexes.USER_LIKES_PRIMARY);
    }

    @Override
    public Identity<UserLikesRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_LIKES;
    }

    @Override
    public UniqueKey<UserLikesRecord> getPrimaryKey() {
        return Keys.KEY_USER_LIKES_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserLikesRecord>> getKeys() {
        return Arrays.<UniqueKey<UserLikesRecord>>asList(Keys.KEY_USER_LIKES_PRIMARY);
    }

    @Override
    public UserLikes as(String alias) {
        return new UserLikes(DSL.name(alias), this);
    }

    @Override
    public UserLikes as(Name alias) {
        return new UserLikes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLikes rename(String name) {
        return new UserLikes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLikes rename(Name name) {
        return new UserLikes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
