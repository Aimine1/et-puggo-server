/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.StatisticsUserCommentScoreRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户评分统计
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatisticsUserCommentScore extends TableImpl<StatisticsUserCommentScoreRecord> {

    private static final long serialVersionUID = 6292168;

    /**
     * The reference instance of <code>etrade_goods.statistics_user_comment_score</code>
     */
    public static final StatisticsUserCommentScore STATISTICS_USER_COMMENT_SCORE = new StatisticsUserCommentScore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatisticsUserCommentScoreRecord> getRecordType() {
        return StatisticsUserCommentScoreRecord.class;
    }

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.id</code>.
     */
    public final TableField<StatisticsUserCommentScoreRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.user_id</code>. 用户id
     */
    public final TableField<StatisticsUserCommentScoreRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "用户id");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.average_score</code>. 平均评分，等于用户信用评分
     */
    public final TableField<StatisticsUserCommentScoreRecord, BigDecimal> AVERAGE_SCORE = createField(DSL.name("average_score"), org.jooq.impl.SQLDataType.DECIMAL(10, 1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0", org.jooq.impl.SQLDataType.DECIMAL)), this, "平均评分，等于用户信用评分");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.total_score</code>. 总评分
     */
    public final TableField<StatisticsUserCommentScoreRecord, BigDecimal> TOTAL_SCORE = createField(DSL.name("total_score"), org.jooq.impl.SQLDataType.DECIMAL(10, 1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0", org.jooq.impl.SQLDataType.DECIMAL)), this, "总评分");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.from_seller_score</code>. 来自卖家评分
     */
    public final TableField<StatisticsUserCommentScoreRecord, BigDecimal> FROM_SELLER_SCORE = createField(DSL.name("from_seller_score"), org.jooq.impl.SQLDataType.DECIMAL(10, 1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0", org.jooq.impl.SQLDataType.DECIMAL)), this, "来自卖家评分");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.from_customer_score</code>. 来自买家评分
     */
    public final TableField<StatisticsUserCommentScoreRecord, BigDecimal> FROM_CUSTOMER_SCORE = createField(DSL.name("from_customer_score"), org.jooq.impl.SQLDataType.DECIMAL(10, 1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0", org.jooq.impl.SQLDataType.DECIMAL)), this, "来自买家评分");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.total_comment</code>. 总评论数
     */
    public final TableField<StatisticsUserCommentScoreRecord, Integer> TOTAL_COMMENT = createField(DSL.name("total_comment"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "总评论数");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.total_from_seller_comment</code>. 来自卖家评论数
     */
    public final TableField<StatisticsUserCommentScoreRecord, Integer> TOTAL_FROM_SELLER_COMMENT = createField(DSL.name("total_from_seller_comment"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "来自卖家评论数");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.total_from_customer_comment</code>. 来自买家评论数
     */
    public final TableField<StatisticsUserCommentScoreRecord, Integer> TOTAL_FROM_CUSTOMER_COMMENT = createField(DSL.name("total_from_customer_comment"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "来自买家评论数");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.created</code>.
     */
    public final TableField<StatisticsUserCommentScoreRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.statistics_user_comment_score.modified</code>.
     */
    public final TableField<StatisticsUserCommentScoreRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.statistics_user_comment_score</code> table reference
     */
    public StatisticsUserCommentScore() {
        this(DSL.name("statistics_user_comment_score"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.statistics_user_comment_score</code> table reference
     */
    public StatisticsUserCommentScore(String alias) {
        this(DSL.name(alias), STATISTICS_USER_COMMENT_SCORE);
    }

    /**
     * Create an aliased <code>etrade_goods.statistics_user_comment_score</code> table reference
     */
    public StatisticsUserCommentScore(Name alias) {
        this(alias, STATISTICS_USER_COMMENT_SCORE);
    }

    private StatisticsUserCommentScore(Name alias, Table<StatisticsUserCommentScoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatisticsUserCommentScore(Name alias, Table<StatisticsUserCommentScoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户评分统计"));
    }

    public <O extends Record> StatisticsUserCommentScore(Table<O> child, ForeignKey<O, StatisticsUserCommentScoreRecord> key) {
        super(child, key, STATISTICS_USER_COMMENT_SCORE);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STATISTICS_USER_COMMENT_SCORE_IDX_USER_ID, Indexes.STATISTICS_USER_COMMENT_SCORE_PRIMARY);
    }

    @Override
    public Identity<StatisticsUserCommentScoreRecord, Long> getIdentity() {
        return Keys.IDENTITY_STATISTICS_USER_COMMENT_SCORE;
    }

    @Override
    public UniqueKey<StatisticsUserCommentScoreRecord> getPrimaryKey() {
        return Keys.KEY_STATISTICS_USER_COMMENT_SCORE_PRIMARY;
    }

    @Override
    public List<UniqueKey<StatisticsUserCommentScoreRecord>> getKeys() {
        return Arrays.<UniqueKey<StatisticsUserCommentScoreRecord>>asList(Keys.KEY_STATISTICS_USER_COMMENT_SCORE_PRIMARY);
    }

    @Override
    public StatisticsUserCommentScore as(String alias) {
        return new StatisticsUserCommentScore(DSL.name(alias), this);
    }

    @Override
    public StatisticsUserCommentScore as(Name alias) {
        return new StatisticsUserCommentScore(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatisticsUserCommentScore rename(String name) {
        return new StatisticsUserCommentScore(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatisticsUserCommentScore rename(Name name) {
        return new StatisticsUserCommentScore(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
