/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.GoodsDataRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商品数据
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoodsData extends TableImpl<GoodsDataRecord> {

    private static final long serialVersionUID = 723031782;

    /**
     * The reference instance of <code>etrade_goods.goods_data</code>
     */
    public static final GoodsData GOODS_DATA = new GoodsData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoodsDataRecord> getRecordType() {
        return GoodsDataRecord.class;
    }

    /**
     * The column <code>etrade_goods.goods_data.id</code>.
     */
    public final TableField<GoodsDataRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.goods_data.goods_id</code>. 商品id
     */
    public final TableField<GoodsDataRecord, Long> GOODS_ID = createField(DSL.name("goods_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "商品id");

    /**
     * The column <code>etrade_goods.goods_data.browse_number</code>. 浏览次数
     */
    public final TableField<GoodsDataRecord, Integer> BROWSE_NUMBER = createField(DSL.name("browse_number"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "浏览次数");

    /**
     * The column <code>etrade_goods.goods_data.like_number</code>. 收藏/喜欢次数
     */
    public final TableField<GoodsDataRecord, Integer> LIKE_NUMBER = createField(DSL.name("like_number"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "收藏/喜欢次数");

    /**
     * The column <code>etrade_goods.goods_data.comment_number</code>. 评论次数
     */
    public final TableField<GoodsDataRecord, Integer> COMMENT_NUMBER = createField(DSL.name("comment_number"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "评论次数");

    /**
     * The column <code>etrade_goods.goods_data.created</code>.
     */
    public final TableField<GoodsDataRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.goods_data.modified</code>.
     */
    public final TableField<GoodsDataRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.goods_data</code> table reference
     */
    public GoodsData() {
        this(DSL.name("goods_data"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_data</code> table reference
     */
    public GoodsData(String alias) {
        this(DSL.name(alias), GOODS_DATA);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_data</code> table reference
     */
    public GoodsData(Name alias) {
        this(alias, GOODS_DATA);
    }

    private GoodsData(Name alias, Table<GoodsDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private GoodsData(Name alias, Table<GoodsDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("商品数据"));
    }

    public <O extends Record> GoodsData(Table<O> child, ForeignKey<O, GoodsDataRecord> key) {
        super(child, key, GOODS_DATA);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOODS_DATA_IDX_GOODS_ID, Indexes.GOODS_DATA_PRIMARY);
    }

    @Override
    public Identity<GoodsDataRecord, Long> getIdentity() {
        return Keys.IDENTITY_GOODS_DATA;
    }

    @Override
    public UniqueKey<GoodsDataRecord> getPrimaryKey() {
        return Keys.KEY_GOODS_DATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<GoodsDataRecord>> getKeys() {
        return Arrays.<UniqueKey<GoodsDataRecord>>asList(Keys.KEY_GOODS_DATA_PRIMARY);
    }

    @Override
    public GoodsData as(String alias) {
        return new GoodsData(DSL.name(alias), this);
    }

    @Override
    public GoodsData as(Name alias) {
        return new GoodsData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsData rename(String name) {
        return new GoodsData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsData rename(Name name) {
        return new GoodsData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Integer, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
