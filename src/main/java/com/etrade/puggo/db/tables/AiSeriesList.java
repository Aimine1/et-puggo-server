/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.AiSeriesListRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * AI鉴定系列
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AiSeriesList extends TableImpl<AiSeriesListRecord> {

    private static final long serialVersionUID = 1421367647;

    /**
     * The reference instance of <code>etrade_goods.ai_series_list</code>
     */
    public static final AiSeriesList AI_SERIES_LIST = new AiSeriesList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AiSeriesListRecord> getRecordType() {
        return AiSeriesListRecord.class;
    }

    /**
     * The column <code>etrade_goods.ai_series_list.id</code>. 系列id，值取自接口返回
     */
    public final TableField<AiSeriesListRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "系列id，值取自接口返回");

    /**
     * The column <code>etrade_goods.ai_series_list.brand_id</code>. 品牌id
     */
    public final TableField<AiSeriesListRecord, Integer> BRAND_ID = createField(DSL.name("brand_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "品牌id");

    /**
     * The column <code>etrade_goods.ai_series_list.name</code>. 系列名
     */
    public final TableField<AiSeriesListRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "系列名");

    /**
     * The column <code>etrade_goods.ai_series_list.is_related</code>. 是否关联鉴定点（若为true，则该系列直接跳转至鉴定点信息）
     */
    public final TableField<AiSeriesListRecord, Byte> IS_RELATED = createField(DSL.name("is_related"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否关联鉴定点（若为true，则该系列直接跳转至鉴定点信息）");

    /**
     * The column <code>etrade_goods.ai_series_list.example_img</code>. 系列示意图
     */
    public final TableField<AiSeriesListRecord, String> EXAMPLE_IMG = createField(DSL.name("example_img"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "系列示意图");

    /**
     * The column <code>etrade_goods.ai_series_list.is_show</code>. 是否展示
     */
    public final TableField<AiSeriesListRecord, Byte> IS_SHOW = createField(DSL.name("is_show"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否展示");

    /**
     * The column <code>etrade_goods.ai_series_list.created</code>.
     */
    public final TableField<AiSeriesListRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.ai_series_list.modified</code>.
     */
    public final TableField<AiSeriesListRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.ai_series_list</code> table reference
     */
    public AiSeriesList() {
        this(DSL.name("ai_series_list"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.ai_series_list</code> table reference
     */
    public AiSeriesList(String alias) {
        this(DSL.name(alias), AI_SERIES_LIST);
    }

    /**
     * Create an aliased <code>etrade_goods.ai_series_list</code> table reference
     */
    public AiSeriesList(Name alias) {
        this(alias, AI_SERIES_LIST);
    }

    private AiSeriesList(Name alias, Table<AiSeriesListRecord> aliased) {
        this(alias, aliased, null);
    }

    private AiSeriesList(Name alias, Table<AiSeriesListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("AI鉴定系列"));
    }

    public <O extends Record> AiSeriesList(Table<O> child, ForeignKey<O, AiSeriesListRecord> key) {
        super(child, key, AI_SERIES_LIST);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AI_SERIES_LIST_PRIMARY);
    }

    @Override
    public UniqueKey<AiSeriesListRecord> getPrimaryKey() {
        return Keys.KEY_AI_SERIES_LIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<AiSeriesListRecord>> getKeys() {
        return Arrays.<UniqueKey<AiSeriesListRecord>>asList(Keys.KEY_AI_SERIES_LIST_PRIMARY);
    }

    @Override
    public AiSeriesList as(String alias) {
        return new AiSeriesList(DSL.name(alias), this);
    }

    @Override
    public AiSeriesList as(Name alias) {
        return new AiSeriesList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AiSeriesList rename(String name) {
        return new AiSeriesList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AiSeriesList rename(Name name) {
        return new AiSeriesList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, Byte, String, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
