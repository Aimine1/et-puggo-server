/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.GoodsRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 发布的商品
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Goods extends TableImpl<GoodsRecord> {

    private static final long serialVersionUID = -716566520;

    /**
     * The reference instance of <code>etrade_goods.goods</code>
     */
    public static final Goods GOODS = new Goods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoodsRecord> getRecordType() {
        return GoodsRecord.class;
    }

    /**
     * The column <code>etrade_goods.goods.id</code>.
     */
    public final TableField<GoodsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.goods.title</code>. 商品简称
     */
    public final TableField<GoodsRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品简称");

    /**
     * The column <code>etrade_goods.goods.description</code>. 商品介绍
     */
    public final TableField<GoodsRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品介绍");

    /**
     * The column <code>etrade_goods.goods.original_price</code>. 原价
     */
    public final TableField<GoodsRecord, BigDecimal> ORIGINAL_PRICE = createField(DSL.name("original_price"), org.jooq.impl.SQLDataType.DECIMAL(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "原价");

    /**
     * The column <code>etrade_goods.goods.real_price</code>. 现价
     */
    public final TableField<GoodsRecord, BigDecimal> REAL_PRICE = createField(DSL.name("real_price"), org.jooq.impl.SQLDataType.DECIMAL(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "现价");

    /**
     * The column <code>etrade_goods.goods.money_kind</code>. 货币类型：1美元 2人民币 等等
     */
    public final TableField<GoodsRecord, String> MONEY_KIND = createField(DSL.name("money_kind"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "货币类型：1美元 2人民币 等等");

    /**
     * The column <code>etrade_goods.goods.launch_user_id</code>. 发布用户id
     */
    public final TableField<GoodsRecord, Long> LAUNCH_USER_ID = createField(DSL.name("launch_user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "发布用户id");

    /**
     * The column <code>etrade_goods.goods.launch_user_nickname</code>. 发布用户昵称
     */
    public final TableField<GoodsRecord, String> LAUNCH_USER_NICKNAME = createField(DSL.name("launch_user_nickname"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "发布用户昵称");

    /**
     * The column <code>etrade_goods.goods.quality</code>. 成色，1全新 2几乎全新 3半新 等等
     */
    public final TableField<GoodsRecord, String> QUALITY = createField(DSL.name("quality"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "成色，1全新 2几乎全新 3半新 等等");

    /**
     * The column <code>etrade_goods.goods.class_path</code>. 分类级别
     */
    public final TableField<GoodsRecord, String> CLASS_PATH = createField(DSL.name("class_path"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "分类级别");

    /**
     * The column <code>etrade_goods.goods.brand</code>. 品牌
     */
    public final TableField<GoodsRecord, String> BRAND = createField(DSL.name("brand"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "品牌");

    /**
     * The column <code>etrade_goods.goods.size</code>. 尺寸
     */
    public final TableField<GoodsRecord, String> SIZE = createField(DSL.name("size"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "尺寸");

    /**
     * The column <code>etrade_goods.goods.unit</code>. 单位
     */
    public final TableField<GoodsRecord, String> UNIT = createField(DSL.name("unit"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "单位");

    /**
     * The column <code>etrade_goods.goods.delivery_type</code>. 发货方式：1邮寄 2面交 等等
     */
    public final TableField<GoodsRecord, Byte> DELIVERY_TYPE = createField(DSL.name("delivery_type"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "发货方式：1邮寄 2面交 等等");

    /**
     * The column <code>etrade_goods.goods.post_type</code>. 邮寄方式：1包邮 2按距离算运费 等等
     */
    public final TableField<GoodsRecord, String> POST_TYPE = createField(DSL.name("post_type"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "邮寄方式：1包邮 2按距离算运费 等等");

    /**
     * The column <code>etrade_goods.goods.state</code>. 商品状态：1草稿箱 2已删除 3已下架 4在售 5交易中 6交易完成 等等
     */
    public final TableField<GoodsRecord, String> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品状态：1草稿箱 2已删除 3已下架 4在售 5交易中 6交易完成 等等");

    /**
     * The column <code>etrade_goods.goods.country</code>. 商品发布国家
     */
    public final TableField<GoodsRecord, String> COUNTRY = createField(DSL.name("country"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品发布国家");

    /**
     * The column <code>etrade_goods.goods.province</code>. 商品发布省份/州
     */
    public final TableField<GoodsRecord, String> PROVINCE = createField(DSL.name("province"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品发布省份/州");

    /**
     * The column <code>etrade_goods.goods.city</code>. 商品发布城市
     */
    public final TableField<GoodsRecord, String> CITY = createField(DSL.name("city"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品发布城市");

    /**
     * The column <code>etrade_goods.goods.district</code>. 商品发布区域/县
     */
    public final TableField<GoodsRecord, String> DISTRICT = createField(DSL.name("district"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品发布区域/县");

    /**
     * The column <code>etrade_goods.goods.launch_last_time</code>. 商品最新上架时间
     */
    public final TableField<GoodsRecord, LocalDateTime> LAUNCH_LAST_TIME = createField(DSL.name("launch_last_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "商品最新上架时间");

    /**
     * The column <code>etrade_goods.goods.is_free</code>. 是否免费
     */
    public final TableField<GoodsRecord, Byte> IS_FREE = createField(DSL.name("is_free"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否免费");

    /**
     * The column <code>etrade_goods.goods.created</code>.
     */
    public final TableField<GoodsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.goods.modified</code>.
     */
    public final TableField<GoodsRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.goods.ai_identify_no</code>. ai鉴定编号
     */
    public final TableField<GoodsRecord, String> AI_IDENTIFY_NO = createField(DSL.name("ai_identify_no"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "ai鉴定编号");

    /**
     * Create a <code>etrade_goods.goods</code> table reference
     */
    public Goods() {
        this(DSL.name("goods"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.goods</code> table reference
     */
    public Goods(String alias) {
        this(DSL.name(alias), GOODS);
    }

    /**
     * Create an aliased <code>etrade_goods.goods</code> table reference
     */
    public Goods(Name alias) {
        this(alias, GOODS);
    }

    private Goods(Name alias, Table<GoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Goods(Name alias, Table<GoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("发布的商品"));
    }

    public <O extends Record> Goods(Table<O> child, ForeignKey<O, GoodsRecord> key) {
        super(child, key, GOODS);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOODS_IDX_GOODS_AI_IDENTIFY_NO, Indexes.GOODS_IDX_GOODS_CLASS_PATH, Indexes.GOODS_IDX_GOODS_IS_FREE, Indexes.GOODS_IDX_GOODS_LAUNCH_USER_ID, Indexes.GOODS_IDX_GOODS_TITLE, Indexes.GOODS_PRIMARY);
    }

    @Override
    public Identity<GoodsRecord, Long> getIdentity() {
        return Keys.IDENTITY_GOODS;
    }

    @Override
    public UniqueKey<GoodsRecord> getPrimaryKey() {
        return Keys.KEY_GOODS_PRIMARY;
    }

    @Override
    public List<UniqueKey<GoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<GoodsRecord>>asList(Keys.KEY_GOODS_PRIMARY);
    }

    @Override
    public Goods as(String alias) {
        return new Goods(DSL.name(alias), this);
    }

    @Override
    public Goods as(Name alias) {
        return new Goods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Goods rename(String name) {
        return new Goods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Goods rename(Name name) {
        return new Goods(name, null);
    }
}
