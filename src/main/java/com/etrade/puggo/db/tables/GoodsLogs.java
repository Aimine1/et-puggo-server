/*
 * This file is generated by jOOQ.
 */
package com.etrade.puggo.db.tables;


import com.etrade.puggo.db.EtradeGoods;
import com.etrade.puggo.db.Indexes;
import com.etrade.puggo.db.Keys;
import com.etrade.puggo.db.tables.records.GoodsLogsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商品操作日志
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoodsLogs extends TableImpl<GoodsLogsRecord> {

    private static final long serialVersionUID = -190871344;

    /**
     * The reference instance of <code>etrade_goods.goods_logs</code>
     */
    public static final GoodsLogs GOODS_LOGS = new GoodsLogs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoodsLogsRecord> getRecordType() {
        return GoodsLogsRecord.class;
    }

    /**
     * The column <code>etrade_goods.goods_logs.id</code>.
     */
    public final TableField<GoodsLogsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>etrade_goods.goods_logs.user_id</code>. 用户id
     */
    public final TableField<GoodsLogsRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "用户id");

    /**
     * The column <code>etrade_goods.goods_logs.goods_id</code>. 商品id
     */
    public final TableField<GoodsLogsRecord, Long> GOODS_ID = createField(DSL.name("goods_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "商品id");

    /**
     * The column <code>etrade_goods.goods_logs.operate</code>. 商品操作
     */
    public final TableField<GoodsLogsRecord, String> OPERATE = createField(DSL.name("operate"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品操作");

    /**
     * The column <code>etrade_goods.goods_logs.content</code>. 具体操作
     */
    public final TableField<GoodsLogsRecord, String> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "具体操作");

    /**
     * The column <code>etrade_goods.goods_logs.is_unread</code>. 1=消息未读，0=消息已读
     */
    public final TableField<GoodsLogsRecord, Byte> IS_UNREAD = createField(DSL.name("is_unread"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1=消息未读，0=消息已读");

    /**
     * The column <code>etrade_goods.goods_logs.created</code>.
     */
    public final TableField<GoodsLogsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>etrade_goods.goods_logs.modified</code>.
     */
    public final TableField<GoodsLogsRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>etrade_goods.goods_logs</code> table reference
     */
    public GoodsLogs() {
        this(DSL.name("goods_logs"), null);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_logs</code> table reference
     */
    public GoodsLogs(String alias) {
        this(DSL.name(alias), GOODS_LOGS);
    }

    /**
     * Create an aliased <code>etrade_goods.goods_logs</code> table reference
     */
    public GoodsLogs(Name alias) {
        this(alias, GOODS_LOGS);
    }

    private GoodsLogs(Name alias, Table<GoodsLogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private GoodsLogs(Name alias, Table<GoodsLogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("商品操作日志"));
    }

    public <O extends Record> GoodsLogs(Table<O> child, ForeignKey<O, GoodsLogsRecord> key) {
        super(child, key, GOODS_LOGS);
    }

    @Override
    public Schema getSchema() {
        return EtradeGoods.ETRADE_GOODS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOODS_LOGS_IDX_GOODS_LOGS_USER_ID, Indexes.GOODS_LOGS_PRIMARY);
    }

    @Override
    public Identity<GoodsLogsRecord, Long> getIdentity() {
        return Keys.IDENTITY_GOODS_LOGS;
    }

    @Override
    public UniqueKey<GoodsLogsRecord> getPrimaryKey() {
        return Keys.KEY_GOODS_LOGS_PRIMARY;
    }

    @Override
    public List<UniqueKey<GoodsLogsRecord>> getKeys() {
        return Arrays.<UniqueKey<GoodsLogsRecord>>asList(Keys.KEY_GOODS_LOGS_PRIMARY);
    }

    @Override
    public GoodsLogs as(String alias) {
        return new GoodsLogs(DSL.name(alias), this);
    }

    @Override
    public GoodsLogs as(Name alias) {
        return new GoodsLogs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsLogs rename(String name) {
        return new GoodsLogs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsLogs rename(Name name) {
        return new GoodsLogs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, String, String, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
