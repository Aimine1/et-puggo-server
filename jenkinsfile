pipeline {
    agent any // 指定Jenkins任务在任何可用的代理上运行

    environment {
        // 设置环境变量，例如远程服务器的地址、用户和凭证等
        REMOTE_SERVER = '54.176.139.26'
        REMOTE_USER = 'puggodev'
        REMOTE_DIR = '/home/puggodev'
        SSH_CREDENTIALS_ID = 'jenkins-user'
        JAVA_JAR = '/var/lib/jenkins/workspace/puggo-business-server-test/target/et-puggo-server-1.0.1-SNAPSHOT.jar'
        PEM = '/var/lib/jenkins/.pem/ec2-et-test2.pem'
    }

    stages {
        stage('Git update') {
            steps {
                echo 'Git updating...'
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/test']],
                    //表明在检出过程中不应生成Git子模块配置
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                        credentialsId: 'GithubAccessToken',
                        url: 'https://github.com/Aimine1/et-puggo-server.git'
                    ]]
                ])
                // 打印最新的提交日志
                sh 'git log -1'
                echo 'Git update success======>'
            }
        }

    	stage('Build with Maven') {
            steps {
        		echo 'Building...'
                // 使用Maven打包
                sh 'mvn clean install -P test -Dmaven.test.skip=true'
                echo 'Build with Maven success======>'
            }
        }

        stage('Deploy Jar to EC2') {
            steps {
                echo 'Deploying...'

				// 使用Jenkins中配置的AWS凭证
                withAWS(credentials: 'jenkins-user', region: 'us-west-1') {
                    // 上传文件到EC2
                    sh "scp -o StrictHostKeyChecking=no -i ${PEM} ${JAVA_JAR} ${REMOTE_USER}@${REMOTE_SERVER}:${REMOTE_DIR}/data"

                    echo 'Upload Jar to EC2 server success======>'

                    // 在EC2上执行Shell脚本
                    sh "ssh -o StrictHostKeyChecking=no -i ${PEM} ${REMOTE_USER}@${REMOTE_SERVER} 'bash ${REMOTE_DIR}/start-java-app.sh'"
                }

                echo 'Deploy Jar to EC2 server success======>'
            }
        }
    }
}